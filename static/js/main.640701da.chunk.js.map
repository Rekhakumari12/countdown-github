{"version":3,"sources":["component/SubmitBox.js","component/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitBox","input","value","className","type","onChange","Timer","days","hr","min","sec","expire","style","fontSize","App","getInput","e","data","target","setState","timer","selectedDate","Date","state","getTime","time","setInterval","now","dist","msPerDay","msPerHr","remainingDays","Math","floor","remainingHr","remainingMin","remainingSec","clearInterval","console","log","onSubmit","alert","stop","this","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.640701da.chunk.js","sourcesContent":["import '../component/css/style.css';\r\nconst SubmitBox = ({ input, value }) => {\r\n  return (\r\n    <div className=\"input_wrapper\">\r\n      <div className=\"input\">\r\n        <input type=\"date\" className=\"input_area\" onChange={input} value={value}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default SubmitBox;\r\n","import './css/style.css';\r\n\r\nconst Timer = ({ days, hr, min, sec, expire }) => {\r\n  return (\r\n    <div>\r\n      {!expire ?\r\n        <div className=\"\">\r\n          <div className=\"timer_wrapper\">\r\n            <div className=\"time\">\r\n              <span>{days < 10 ? \"0\" + days : days}</span>\r\n              <p className=\"text\">DAYS</p>\r\n            </div>\r\n            <div className=\"time\">\r\n              <span>{hr < 10 ? \"0\" + hr : hr}</span>\r\n              <p className=\"text\">HOURS</p>\r\n            </div>\r\n            <div className=\"time\">\r\n              <span>{min < 10 ? \"0\" + min : min}</span>\r\n              <p className=\"text\">MINUTES</p>\r\n            </div>\r\n            <div className=\"time\">\r\n              <span>{sec < 10 ? \"0\" + sec : sec}</span>\r\n              <p className=\"text\">SECONDS</p>\r\n            </div>\r\n          </div>\r\n        </div> : <div><h4 style={{fontSize:\"2rem\"}}>{expire}</h4></div>\r\n      }\r\n  </div>\r\n  )\r\n}\r\nexport default Timer;","import React from 'react';\nimport SubmitBox from './component/SubmitBox';\nimport Timer from './component/Timer';\nimport './App.css';\nclass App extends React.Component{\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      days: 0,\n      hr: 0,\n      min: 0,\n      sec: 0,\n      time: 0,\n      expire:''\n    }\n  }\n  // componentDidUpdate() {\n  //   localStorage.setItem(\"days\", JSON.stringify(this.state.days));\n  //   localStorage.setItem(\"hr\", JSON.stringify(this.state.hr));\n  //   localStorage.setItem(\"min\", JSON.stringify(this.state.min));\n  //   localStorage.setItem(\"sec\", JSON.stringify(this.state.sec));\n  //   localStorage.setItem(\"time\", JSON.stringify(this.state.time));\n  // }\n  // componentDidMount() {\n  //   // console.log(localStorage.getItem)\n  //   if (localStorage.getItem(\"items\") !== null) {\n  //     let all = JSON.parse(localStorage.getItem(\"items\"));\n  //     let progress = JSON.parse(localStorage.getItem(\"progress\"));\n  //     this.setState({ items: all });\n  //     this.setState({ progress: progress });\n  //   } else {\n  //     let all =[];\n  //     let progress = 0;\n  //     this.setState({ items: all });\n  //     this.setState({ progress: progress });\n  //   }  \n  // }\n  getInput=(e)=> {\n    let data = e.target.value; \n    this.setState({ input: data, expire:\"\"});\n  }\n  timer=()=> {\n    let selectedDate = new Date(this.state.input).getTime();\n     let time = setInterval(() => {\n      let now = new Date().getTime();\n      let dist = selectedDate - now;\n      let msPerDay = 1000 * 60 * 60 * 24;\n      let msPerHr = 1000 * 60 * 60;\n      let msPerSec = 1000 * 60;\n      let remainingDays = Math.floor(dist / msPerDay);\n      let remainingHr = Math.floor((dist % msPerDay) / msPerHr);\n      let remainingMin = Math.floor((dist % msPerHr) / msPerSec);\n      let remainingSec = Math.floor((dist % msPerSec) / 1000);\n       this.setState({ days: remainingDays, hr: remainingHr, min: remainingMin, sec: remainingSec, time: time, expire: '' });\n       if (dist < 0) {\n        clearInterval(this.state.time);\n        this.setState({ days: 0, hr: 0, min: 0, sec: 0,time:0,input:'',expire: \"Date Expired :(\" });\n        return;\n      }\n    },1000)\n    console.log(selectedDate);\n  }\n  onSubmit = () => {\n    clearInterval(this.state.time);\n    if (this.state.input !== \"\") {\n      this.timer()\n    } else {\n      alert(\"Please choose End Date\");\n    }\n    }\n    \n  stop=()=> {\n    clearInterval(this.state.time);\n    this.setState({ days: 0, hr: 0, min: 0, sec: 0,time:0,input:'',expire:'' });\n  }\n  render() {\n    return (\n      <div className=\"App-header\">\n        <Timer days={this.state.days} hr={this.state.hr} min={this.state.min} sec={this.state.sec} expire={this.state.expire}/>\n        <SubmitBox input={this.getInput} value={this.state.input} />\n        {this.state.time ? <button className=\"cbtn btn\" onClick={this.stop}>Clear</button>\n          : <div className=\"btn\">\n        <button type=\"button\" className=\"sbtn\" onClick={this.onSubmit}>Submit</button>\n      </div>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}